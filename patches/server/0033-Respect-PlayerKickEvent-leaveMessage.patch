From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Ivan Pekov <ivan@mrivanplays.com>
Date: Thu, 10 Sep 2020 21:16:40 +0300
Subject: [PATCH] Respect PlayerKickEvent leaveMessage


diff --git a/src/main/java/net/minecraft/server/PlayerConnection.java b/src/main/java/net/minecraft/server/PlayerConnection.java
index 7137759447e65c96abfe3b5ef181b8ce33294df4..35e71445b3c131fd723a4da0b26bd23f102437d5 100644
--- a/src/main/java/net/minecraft/server/PlayerConnection.java
+++ b/src/main/java/net/minecraft/server/PlayerConnection.java
@@ -333,7 +333,7 @@ public class PlayerConnection implements PacketListenerPlayIn {
         this.networkManager.sendPacket(new PacketPlayOutKickDisconnect(ichatbasecomponent), (future) -> {
             this.networkManager.close(ichatbasecomponent);
         });
-        this.a(ichatbasecomponent); // CraftBukkit - fire quit instantly
+        this.a(ichatbasecomponent, event.getLeaveMessage() == null || event.getLeaveMessage().equalsIgnoreCase(leaveMessage) ? null : event.getLeaveMessage()); // CraftBukkit - fire quit instantly // Yatopia
         this.networkManager.stopReading();
         MinecraftServer minecraftserver = this.minecraftServer;
         NetworkManager networkmanager = this.networkManager;
@@ -1788,6 +1788,11 @@ public class PlayerConnection implements PacketListenerPlayIn {
 
     @Override
     public void a(IChatBaseComponent ichatbasecomponent) {
+        // Yatopia start - added quitMessage parameter
+        a(ichatbasecomponent, null);
+    }
+    public void a(IChatBaseComponent ichatbasecomponent, net.kyori.adventure.text.Component quitMessage) {
+        // Yatopia end
         // CraftBukkit start - Rarely it would send a disconnect line twice
         if (this.processedDisconnect) {
             return;
@@ -1804,7 +1809,7 @@ public class PlayerConnection implements PacketListenerPlayIn {
 
         this.player.p();
         // Paper start - Adventure
-        net.kyori.adventure.text.Component quitMessage = this.minecraftServer.getPlayerList().disconnect(this.player);
+        quitMessage = this.minecraftServer.getPlayerList().disconnect(this.player, quitMessage); // Yatopia
         if ((quitMessage != null) && !quitMessage.equals(net.kyori.adventure.text.Component.empty())) {
             this.minecraftServer.getPlayerList().sendMessage(PaperAdventure.asVanilla(quitMessage));
             // Paper end
diff --git a/src/main/java/net/minecraft/server/PlayerList.java b/src/main/java/net/minecraft/server/PlayerList.java
index 0f93063d5462d03777b4db52ee851bb5adedabd8..bb848ecd89e1a23d295584a2d7e1ddf8f3fd574d 100644
--- a/src/main/java/net/minecraft/server/PlayerList.java
+++ b/src/main/java/net/minecraft/server/PlayerList.java
@@ -503,6 +503,11 @@ public abstract class PlayerList {
     }
 
     public net.kyori.adventure.text.Component disconnect(EntityPlayer entityplayer) { // Paper - return Component
+        // Yatopia start - add quitMessage parameter
+        return disconnect(entityplayer, null);
+    }
+    public net.kyori.adventure.text.Component disconnect(EntityPlayer entityplayer, net.kyori.adventure.text.Component quitMessage) {
+        // Yatopia end
         WorldServer worldserver = entityplayer.getWorldServer();
 
         entityplayer.a(StatisticList.LEAVE_GAME);
@@ -602,7 +607,7 @@ public abstract class PlayerList {
         cserver.getScoreboardManager().removePlayer(entityplayer.getBukkitEntity());
         // CraftBukkit end
 
-        return entityplayer.didPlayerJoinEvent ? playerQuitEvent.quitMessage() : null; // CraftBukkit // Paper - Adventure // Paper - don't print quit if we never printed join
+        return entityplayer.didPlayerJoinEvent ? quitMessage != null ? quitMessage : playerQuitEvent.quitMessage() : null; // CraftBukkit // Paper - Adventure // Paper - don't print quit if we never printed join // Yatopia
     }
 
     // CraftBukkit start - Whole method, SocketAddress to LoginListener, added hostname to signature, return EntityPlayer
