From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: ishland <ishlandmc@yeah.net>
Date: Sat, 23 Jan 2021 12:41:00 +0800
Subject: [PATCH] fixup! Threaded WorldGen


diff --git a/src/main/java/net/minecraft/server/AreaLazy.java b/src/main/java/net/minecraft/server/AreaLazy.java
index c274b9c560afbae75aab7c201559e54400c98a5f..d3d15bd734e18d1e5cf484f193c5a9b789bf9697 100644
--- a/src/main/java/net/minecraft/server/AreaLazy.java
+++ b/src/main/java/net/minecraft/server/AreaLazy.java
@@ -5,10 +5,10 @@ import it.unimi.dsi.fastutil.longs.Long2IntLinkedOpenHashMap;
 public final class AreaLazy implements Area {
 
     private final AreaTransformer8 a;
-    private final Long2IntLinkedOpenHashMap b;
+    private final ThreadLocal<Long2IntLinkedOpenHashMap> b;
     private final int c;
 
-    public AreaLazy(Long2IntLinkedOpenHashMap long2intlinkedopenhashmap, int i, AreaTransformer8 areatransformer8) {
+    public AreaLazy(ThreadLocal<Long2IntLinkedOpenHashMap> long2intlinkedopenhashmap, int i, AreaTransformer8 areatransformer8) {
         this.b = long2intlinkedopenhashmap;
         this.c = i;
         this.a = areatransformer8;
@@ -17,26 +17,23 @@ public final class AreaLazy implements Area {
     @Override
     public int a(int i, int j) {
         long k = ChunkCoordIntPair.pair(i, j);
-        Long2IntLinkedOpenHashMap long2intlinkedopenhashmap = this.b;
 
-        synchronized (this.b) {
-            int l = this.b.get(k);
+            int l = this.b.get().get(k);
 
             if (l != Integer.MIN_VALUE) {
                 return l;
             } else {
                 int i1 = this.a.apply(i, j);
 
-                this.b.put(k, i1);
-                if (this.b.size() > this.c) {
+                this.b.get().put(k, i1);
+                if (this.b.get().size() > this.c) {
                     for (int j1 = 0; j1 < this.c / 16; ++j1) {
-                        this.b.removeFirstInt();
+                        this.b.get().removeFirstInt();
                     }
                 }
 
                 return i1;
             }
-        }
     }
 
     public int a() {
diff --git a/src/main/java/net/minecraft/server/WorldGenContextArea.java b/src/main/java/net/minecraft/server/WorldGenContextArea.java
index b67d88d32a73b3a51809b91db11d54bc99169fe1..71141d06fa956e07c5c3fb6c3a9b66af588e05e6 100644
--- a/src/main/java/net/minecraft/server/WorldGenContextArea.java
+++ b/src/main/java/net/minecraft/server/WorldGenContextArea.java
@@ -5,7 +5,7 @@ import java.util.Random;
 
 public class WorldGenContextArea implements AreaContextTransformed<AreaLazy> {
 
-    private final Long2IntLinkedOpenHashMap a;
+    private final ThreadLocal<Long2IntLinkedOpenHashMap> a;
     private final int b;
     private final NoiseGeneratorPerlin c;
     private final long d;
@@ -14,8 +14,11 @@ public class WorldGenContextArea implements AreaContextTransformed<AreaLazy> {
     public WorldGenContextArea(int i, long j, long k) {
         this.d = b(j, k);
         this.c = new NoiseGeneratorPerlin(new Random(j));
-        this.a = new Long2IntLinkedOpenHashMap(16, 0.25F);
-        this.a.defaultReturnValue(Integer.MIN_VALUE);
+        this.a = ThreadLocal.withInitial(() -> {
+            final Long2IntLinkedOpenHashMap long2IntLinkedOpenHashMap = new Long2IntLinkedOpenHashMap(16, 0.25F);
+            long2IntLinkedOpenHashMap.defaultReturnValue(Integer.MIN_VALUE);
+            return long2IntLinkedOpenHashMap;
+        });
         this.b = i;
     }
 
